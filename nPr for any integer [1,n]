const int mod = 1e9 + 7;
vector<ll>a(1000001);
void factorial()
{
    a[0] = 1;
    for(ll i = 1; i < 1000001; i++)
    {
        a[i] = (a[i-1]*i)%mod;
    }
}
long long bigmod(ll a,ll b,ll m)//(a^b)%m
{
    if(b==0)return 1%m;
    long long p=bigmod(a,b/2,m);
    p=(p*p)%m;
    if(b%2==1)p=(p*(a%m))%m;
    return p;
}
long long modinverse(ll A, ll M)
{
	return bigmod(A, M - 2, M);
}
ll test()
{
    ll n, k;
    cin>>n>>k;
    if(n < k) return 0;
    return (a[n]*modinverse(a[n-k], mod))%mod;
}
